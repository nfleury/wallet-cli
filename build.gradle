group 'Tron'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: "com.liferay.node"
apply plugin: 'application'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:varargs", "-Xlint:classfile", "-Xlint:dep-ann",
        "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
        "-Xlint:path", "-Xlint:static", "-Xlint:try", "-Xlint:fallthrough",
        "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:-options"
]

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
    repositories {
        mavenLocal()
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}


repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/protos'
        }
        java {
            srcDir 'src/main/gen'
            srcDir 'src/main/java'
        }
    }

}
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
    }
    ext {
        projectVersion = '1.3.0-RELEASE'

        grpcVersion = '1.6.1'
        protobufVersion = '3.3.0'
        protobufGradlePluginVersion = '0.8.0'

        springBootVersion = '1.5.6.RELEASE'

        springSleuthVersion = '1.2.4.RELEASE'
        springCloudVersion = 'Dalston.SR3'
        springCloudConsulVersion = '1.2.1.RELEASE'
        springCloudEurekaVersion = '1.3.4.RELEASE'
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath "gradle.plugin.com.liferay:gradle-plugins-node:4.3.0"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    //
    compile 'com.maxmind.geoip2:geoip2:2.10.0'

    // google grpc
    compile group: 'io.grpc', name: 'grpc-netty', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.9.0'

    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.4'


    compile "com.madgag.spongycastle:core:1.53.0.0"
    compile "com.madgag.spongycastle:prov:1.53.0.0"

    compile group: 'com.typesafe', name: 'config', version: '1.3.2'

    compile "com.google.code.findbugs:jsr305:3.0.0"

    compile group: 'com.typesafe', name: 'config', version: '1.3.2'

    //explorer
    compile 'org.projectlombok:lombok:1.16.6'
    compile "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"

    compile "org.springframework.cloud:spring-cloud-starter-sleuth:${springSleuthVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-consul-discovery:${springCloudConsulVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-eureka:${springCloudEurekaVersion}"

    compile "org.apache.commons:commons-collections4:4.0"
    compile "org.apache.commons:commons-lang3:3.4"

    //swagger2 api
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    //thymeleaf
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.6.RELEASE'
    compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'

    //spring-boot-devtools
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.6.RELEASE'

    compile group: 'com.google.api.grpc', name: 'googleapis-common-protos', version: '0.0.3'

    //spring test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.6.RELEASE'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.10.RELEASE'


}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/"
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"

    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = "gen"
                }

                js {
                    outputSubDir = "genjs/"
                    option "import_style=commonjs"
                    option "binary"
                }
            }
        }
        all()*.plugins {
            grpc {
                outputSubDir = "gen"
            }
        }
    }
}

run {
    if (project.hasProperty('cmd')) {
        standardInput = System.in
        mainClassName = 'org.tron.walletcli.TestClient'
    }
}

bootRun {
    addResources = true
}

allprojects {
    plugins.withId("com.liferay.node") {
        node.global = true
        node.nodeDir = "$projectDir/src/genjs"
        node.nodeVersion = "8.10.0"
    }
}
